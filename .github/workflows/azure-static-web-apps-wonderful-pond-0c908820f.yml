name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

jobs:
  build_and_deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # <-- REQUIRED for OIDC
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: My_App/frontend/package-lock.json

      - name: Build frontend
        working-directory: My_App/frontend
        run: |
          npm ci
          npm run build
        env:
          CI: false   # keep until you fix the eslint warning

      # Fetch a GitHub OIDC ID token for the SWA action
      - name: Get GitHub OIDC ID token
        id: oidc
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const tok = await core.getIDToken();
            core.setOutput('token', tok);

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: upload
          app_location: My_App/frontend
          output_location: build
          skip_app_build: true
          github_id_token: ${{ steps.oidc.outputs.token }}  # <-- OIDC auth

  close_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: Azure/static-web-apps-deploy@v1
        with:
          action: close
